@model MyMVCProject.Models.ViewModels.ProductShopVM

@{
	ViewData["Title"] = Model.Product.Name;
}

<style>
	.discounted-price {
		color: #dc3545;
		font-size: 1.6rem;
		font-weight: 700;
	}

	.discount-badge {
		display: inline-block;
		background-color: #a52a2a; /* bordo-kırmızı ton, indirim için çarpıcı */
		color: #fff;
		font-weight: bold;
		font-size: 1rem;
		padding: 6px 12px;
		border-radius: 4px;
		box-shadow: 0 0 8px rgba(0, 0, 0, 0.3);
		letter-spacing: 0.5px;
		margin-bottom: 0.5rem;
	}

	.original-price {
		color: #6c757d;
		text-decoration: line-through;
		font-size: 1.3rem;
		margin-right: 0.5rem;
	}


	body {
		background-color: #1b2838;
		font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
		color: #c7d5e0;
	}

	.details-container {
		max-width: 100%;
		margin: 2rem auto;
		display: flex;
		gap: 2rem;
	}

	.left-container {
		flex: 10;
		display: flex;
		flex-direction: column;
		gap: 1rem;
	}

	.small-cover {
		width: 200px;
		height: 300px;
		border-radius: 8px;
		overflow: hidden;
		align-self: center;
		box-shadow: 0 0 10px rgba(102, 192, 244, 0.6);
	}

		.small-cover img {
			width: 100%;
			height: 100%;
			object-fit: cover;
		}

	.carousel-container {
		flex: 1;
		background-color: #2a475e;
		padding: 1rem;
		border-radius: 8px;
	}

	.carousel-inner {
		width: 100%;
		height: 550px;
		border-radius: 6px;
		overflow: hidden;
	}

		.carousel-inner img {
			width: 100%;
			height: 100%;
			object-fit: cover;
			border-radius: 6px;
		}

	.right-container {
		flex: 3;
		padding: 1.5rem;
		border-radius: 8px;
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
		gap: 1rem;
	}

	.right-container-base {
		background-color: #2a475e;
		flex: 3;
		padding: 1.5rem;
		border-radius: 8px;
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
		gap: 1rem;
	}

	.cover-right {
		width: 100%;
		height: 300px;
		border-radius: 8px;
		overflow: hidden;
		box-shadow: 0 0 10px rgba(102, 192, 244, 0.6);
	}

		.cover-right img {
			width: 100%;
			height: 100%;
			object-fit: cover;
		}

	.product-meta {
		font-size: 0.95rem;
		color: #b8b6b4;
		margin-top: 1rem;
	}

	.btn-group {
		display: flex;
		gap: 1rem;
		margin-top: 1rem;
	}

	.btn-buy, .btn-wishlist {
		flex: 1;
		padding: 12px 0;
		font-size: 1.1rem;
		border-radius: 6px;
		cursor: pointer;
		border: none;
		transition: background-color 0.3s ease;
		color: white;
		text-align: center;
		width: 450px;
	}

	.btn-buy {
		background-color: #4c6b22;
	}

		.btn-buy:hover {
			background-color: #3e5418;
		}

	.btn-wishlist {
		background-color: #66c0f4;
	}

		.btn-wishlist:hover {
			background-color: #417a9b;
		}

	.product-desc {
		margin-top: 2rem;
		font-size: 1rem;
		line-height: 1.5;
		color: #d6d7d8;
	}
</style>

<div class="details-container">
	<div class="left-container">
		<div class="carousel-container">
			@if (Model.Product.ProductImages != null && Model.Product.ProductImages.Count > 0)
			{
				<div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
					<div class="carousel-indicators">
						@foreach (var imageWithIndex in Model.Product.ProductImages.Select((image, index) => new { Image = image, Index = index }))
						{
							<button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@imageWithIndex.Index" class="@(imageWithIndex.Index == 0 ? "active" : "")" aria-current="true" aria-label="Slide @(imageWithIndex.Index + 1)"></button>
						}
					</div>
					<div class="carousel-inner">
						@foreach (var imageWithIndex in Model.Product.ProductImages.Select((image, index) => new { Image = image, Index = index }))
						{
							<div class="@(imageWithIndex.Index == 0 ? "carousel-item active" : "carousel-item")">
								<img src="@imageWithIndex.Image.ImageUrl" class="d-block w-100" alt="Product Image">
							</div>
						}
					</div>
					<button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
						<span class="carousel-control-prev-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Previous</span>
					</button>
					<button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
						<span class="carousel-control-next-icon" aria-hidden="true"></span>
						<span class="visually-hidden">Next</span>
					</button>
				</div>
			}
			else
			{
				<img src="/images/default.png" class="img-fluid rounded-3 shadow-sm" alt="Default Image" />
			}
			<div class="pt-3" style="text-align: center;">
				<button class="btn-wishlist" style="padding: 8px 0; width:300px " onclick="alert('İstek listesine eklendi!')">İstek Listesine Ekle</button>
			</div>
		</div>
	</div>

	<div class="right-container-base">
		<div class="cover-right">
			<img src="@(Model.Product.CoverImageUrl ?? "/images/default.png")" alt="Cover Image" />
		</div>

		<div class="product-meta">
			<p>Publisher: <strong>@Model.Product.Publisher</strong></p>
			<p>Category: <strong>@(Model.Product.Category?.Name ?? "Unknown")</strong></p>
			<p>Release Date: <strong>@Model.Product.PublishDate</strong></p>
		</div>
	</div>
</div>

<div class="details-container">
	<div class="left-container">
		<div class="carousel-container" style="display:flex; align-items: center; justify-content: space-between;">
			<div style="flex: 1;">
				@if (Model.Product.ListPrice == Model.Product.Price)
				{
					<p style="font-size:2rem; margin: 0;">
						Price: <strong>@Model.Product.ListPrice</strong>
					</p>
				}
				else
				{
					<div class="price-row" style="display: flex; align-items: baseline; margin-top: 5px;">
						<div>
							<span class="original-price">$@Model.Product.Price</span>
						</div>
						<div>
							<span class="discounted-price">$@Model.Product.ListPrice</span>
						</div>
						<div>
							<span class="discount-badge">@($"{Model.Product.DiscountPercent}% OFF")</span>
						</div>
					</div>
				}
			</div>
			<div>
				@if (User.Identity.IsAuthenticated && Model.IsInLibrary)
				{
					<form asp-controller="Library" asp-action="Index" method="post">
						<input type="hidden" name="productId" value="@Model.Product.Id" />
						<button class="btn btn-secondary" style="width:450px;">In Library</button>
					</form>
				}
				else if (User.Identity.IsAuthenticated && Model.IsInBasket)
				{
					<form asp-controller="Cart" asp-action="Index" method="post">
						<input type="hidden" name="productId" value="@Model.Product.Id" />
						<button class="btn btn-secondary" style="width:450px;">In Basket</button>
					</form>
				}
				else
				{
					<form asp-controller="Cart" asp-action="AddToCart" method="post">
						<input type="hidden" name="productId" value="@Model.Product.Id" />
						<button type="submit" class="btn btn-buy">Purchase</button>
					</form>
				}

			</div>
		</div>
	</div>
	<div class="right-container">
	</div>
</div>

<div class="details-container">
	<div class="left-container">
		<div class="product-desc">
			<h4>Açıklama</h4>
			<p>@Model.Product.Description</p>
		</div>
	</div>
	<div class="right-container">
	</div>
</div>